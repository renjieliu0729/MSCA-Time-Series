#Use kpss.test to test stationary
kpss.test(diff(gdp,differences = 1))
kpss.test(diff(gdp,differences = 2))
# Based on the kpss test. The second order difference of the data is stationary. Because the p-value is larger than 0.05, so fail to reject the hypothesis that the time series is stationary. In first order the p - value is smaller than 0.05, and this will reject the null hypothesis.
auto.arima(train,lambda = T)
## Based on the auto.arima. p is 0, d is 2, and q is 1 with drift, with ma1 coeficient is -0.6327. This means that the best arima does not have auto regression and has second order difference with 1 lag as the window for moving average.
auto.arima(train,lambda = T)
## Based on the auto.arima. p is 0, d is 2, and q is 1 with drift, with ma1 coeficient is -0.6327. This means that the best arima does not have auto regression and has second order difference with 1 lag as the window for moving average.
eacf(train)
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
Arima(train, order=c(1,2,1))
Arima(train, order=c(1,2,2))
Arima(train, order=c(2,2,1))
# Based on the AIC value. the Arima(1,2,1) has the smallest AICc value. It is better than the auto arima model.
setwd("~/Desktop/Spring2021/Time/HW/HW3")
library(fpp)
library(TSA)
#load('usgdp.rda')
gdp <- ts(usgdp$GDP, frequency = 1,start = 1960)
train <- window(gdp,start = 1960, end = 2012)
test <- window(gdp,start = 2013, end = 2017)
plot(train)
# The box - cox transformation is necessary for this data because the data is increasing exponentianally. larger variance between lags as time progress.
BoxCox.lambda(train)
train <- BoxCox(train, lambda = 0.23)
plot(train)
library(tseries)
# first order difference of the data
plot(diff(train,differences = 1))
# second order difference of the data
plot(diff(train,differences = 2))
#Use kpss.test to test stationary
kpss.test(diff(train,differences = 1))
kpss.test(diff(train,differences = 2))
# Based on the kpss test. Both the first and second order difference of the data is stationary. Because the p-value is larger than 0.05, so fail to reject the null hypothesis that the time series is stationary.
auto <- auto.arima(train,seasonal = FALSE)
auto
## The best model from auto arima is p = 1, d = 1, and q = 0. This means that the model uses first order auto regression with first order differencing, and the model does not have moving average in the model. Drift is the intercept of the model. The Coefficients for ar1 is 0.4731
eacf(train)
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
summary(Arima(train, order=c(1,1,1), include.drift = TRUE))
summary(Arima(train, order=c(1,1,2),include.drift = TRUE))
summary(Arima(train, order=c(2,1,1),include.drift = TRUE))
# Based on the AICc value. the auto arima model has the smallest AICc value. It is better than the than the three Arima models. Becuase the AICc = 444.88 which is the lowest.
# Forecase for four years so h = 4
plot(forecast(auto,h=4,level = c(80, 95)))
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
fore1 <- InvBoxCox(fore1, 0.23)
actual <- usgdp[usgdp$Year>2012,]
err <- actual$GDP - fore1
plot(err)
# The forecase is getting larger.
sum((err)^2)
plot(train)
# The box - cox transformation is necessary for this data because the data is increasing exponentianally. larger variance between lags as time progress.
BoxCox.lambda(train)
train <- BoxCox(train, lambda = 0.23)
plot(train)
library(fpp)
library(TSA)
load('usgdp.rda')
gdp <- ts(usgdp$GDP, frequency = 1,start = 1960)
train <- window(gdp,start = 1960, end = 2012)
test <- window(gdp,start = 2013, end = 2017)
plot(train)
# The box - cox transformation is necessary for this data because the data is increasing exponentianally. larger variance between lags as time progress.
BoxCox.lambda(train)
train <- BoxCox(train, lambda = 0.23)
plot(train)
library(tseries)
# first order difference of the data
plot(diff(train,differences = 1))
# second order difference of the data
plot(diff(train,differences = 2))
#Use kpss.test to test stationary
kpss.test(diff(train,differences = 1))
kpss.test(diff(train,differences = 2))
# Based on the kpss test. Both the first and second order difference of the data is stationary. Because the p-value is larger than 0.05, so fail to reject the null hypothesis that the time series is stationary.
auto <- auto.arima(train,seasonal = FALSE)
auto
## The best model from auto arima is p = 1, d = 1, and q = 0. This means that the model uses first order auto regression with first order differencing, and the model does not have moving average in the model. Drift is the intercept of the model. The Coefficients for ar1 is 0.4731
eacf(train)
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
summary(Arima(train, order=c(1,1,1), include.drift = TRUE))
summary(Arima(train, order=c(1,1,2),include.drift = TRUE))
summary(Arima(train, order=c(2,1,1),include.drift = TRUE))
# Based on the AICc value. the auto arima model has the smallest AICc value. It is better than the than the three Arima models. Becuase the AICc = 444.88 which is the lowest.
# Forecase for four years so h = 4
plot(forecast(auto,h=4,level = c(80, 95)))
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
fore1 <- InvBoxCox(fore1, 0.23)
actual <- usgdp[usgdp$Year>2012,]
err <- actual$GDP - fore1
plot(err)
# The forecase is getting larger.
sum((err)^2)
#' @export
eacf <-
function (z,ar.max=7,ma.max=13)
{
#
#  PROGRAMMED BY K.S. CHAN, DEPARTMENT OF STATISTICS AND ACTUARIAL SCIENCE,
#  UNIVERSITY OF IOWA.
#
#  DATE: 4/2001
#  Compute the extended sample acf (ESACF) for the time series stored in z.
#  The matrix of ESACF with the AR order up to ar.max and the MA order
#  up to ma.max is stored in the matrix EACFM.
#  The default values for NAR and NMA are 7 and 13 respectively.
#  Side effect of the eacf function:
#  The function prints a coded ESACF table with
#  significant values denoted by * and nosignificant values by 0, significance
#  level being 5%.
#
#  Output:
#	eacf=matrix of esacf
#	symbol=matrix of coded esacf
#
lag1<-function(z,lag=1){c(rep(NA,lag),z[1:(length(z)-lag)])}
reupm<-function(m1,nrow,ncol){
k<-ncol-1
m2<-NULL
for (i in 1:k){
i1<-i+1
work<-lag1(m1[,i])
work[1]<--1
temp<-m1[,i1]-work*m1[i1,i1]/m1[i,i]
temp[i1]<-0
m2<-cbind(m2,temp)
}
m2}
ceascf<-function(m,cov1,nar,ncol,count,ncov,z,zm){
result<-0*seq(1,nar+1)
result[1]<-cov1[ncov+count]
for (i in 1:nar) {
temp<-cbind(z[-(1:i)],zm[-(1:i),1:i])%*%c(1,-m[1:i,i])
result[i+1]<-acf(temp,plot=FALSE,lag.max=count,drop.lag.0=FALSE)$acf[count+1]
}
result
}
ar.max<-ar.max+1
ma.max<-ma.max+1
nar<-ar.max-1
nma<-ma.max
ncov<-nar+nma+2
nrow<-nar+nma+1
ncol<-nrow-1
z<-z-mean(z)
zm<-NULL
for(i in 1:nar) zm<-cbind(zm,lag1(z,lag=i))
cov1<-acf(z,lag.max=ncov,plot=FALSE,drop.lag.0=FALSE)$acf
cov1<-c(rev(cov1[-1]),cov1)
ncov<-ncov+1
m1<-matrix(0,ncol=ncol,nrow=nrow)
for(i in 1:ncol) m1[1:i,i]<-
ar.ols(z,order.max=i,aic=FALSE,demean=FALSE,intercept=FALSE)$ar
eacfm<-NULL
for (i in 1:nma) {
m2<-reupm(m1=m1,nrow=nrow,ncol=ncol)
ncol<-ncol-1
eacfm<-cbind(eacfm, ceascf(m2,cov1,nar,ncol,i,ncov,z,zm))
m1<-m2}
work<-1:(nar+1)
work<-length(z)-work+1
symbol<-NULL
for ( i in 1:nma) {
work<-work-1
symbol<-cbind(symbol,ifelse(abs(eacfm[,i])>2/work^.5, 'x','o'))}
rownames(symbol)<-0:(ar.max-1)
colnames(symbol)<-0:(ma.max-1)
cat('AR/MA\n')
print(symbol,quote=FALSE)
invisible(list(eacf=eacfm,ar.max=ar.max,ma.ma=ma.max,symbol=symbol))
}
library(fpp)
library(TSA)
load('usgdp.rda')
gdp <- ts(usgdp$GDP, frequency = 1,start = 1960)
train <- window(gdp,start = 1960, end = 2012)
test <- window(gdp,start = 2013, end = 2017)
plot(train)
# The box - cox transformation is necessary for this data because the data is increasing exponentianally. larger variance between lags as time progress.
BoxCox.lambda(train)
train <- BoxCox(train, lambda = 0.23)
plot(train)
library(tseries)
# first order difference of the data
plot(diff(train,differences = 1))
# second order difference of the data
plot(diff(train,differences = 2))
#Use kpss.test to test stationary
kpss.test(diff(train,differences = 1))
kpss.test(diff(train,differences = 2))
# Based on the kpss test. Both the first and second order difference of the data is stationary. Because the p-value is larger than 0.05, so fail to reject the null hypothesis that the time series is stationary.
auto <- auto.arima(train,seasonal = FALSE)
auto
## The best model from auto arima is p = 1, d = 1, and q = 0. This means that the model uses first order auto regression with first order differencing, and the model does not have moving average in the model. Drift is the intercept of the model. The Coefficients for ar1 is 0.4731
# Forecase for four years so h = 4
plot(forecast(auto,h=4,level = c(80, 95)))
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
fore1 <- InvBoxCox(fore1, 0.23)
actual <- usgdp[usgdp$Year>2012,]
err <- actual$GDP - fore1
plot(err)
# The forecase is getting larger.
sum((err)^2)
library(fpp)
library(TSA)
load('usgdp.rda')
gdp <- ts(usgdp$GDP, frequency = 1,start = 1960)
train <- window(gdp,start = 1960, end = 2012)
test <- window(gdp,start = 2013, end = 2017)
plot(train)
# The box - cox transformation is necessary for this data because the data is increasing exponentianally. larger variance between lags as time progress.
BoxCox.lambda(train)
train <- BoxCox(train, lambda = 0.23)
plot(train)
library(tseries)
# first order difference of the data
plot(diff(train,differences = 1))
# second order difference of the data
plot(diff(train,differences = 2))
#Use kpss.test to test stationary
kpss.test(diff(train,differences = 1))
kpss.test(diff(train,differences = 2))
# Based on the kpss test. Both the first and second order difference of the data is stationary. Because the p-value is larger than 0.05, so fail to reject the null hypothesis that the time series is stationary.
auto <- auto.arima(train,seasonal = FALSE)
auto
## The best model from auto arima is p = 1, d = 1, and q = 0. This means that the model uses first order auto regression with first order differencing, and the model does not have moving average in the model. Drift is the intercept of the model. The Coefficients for ar1 is 0.4731
eacf(train)
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
summary(Arima(train, order=c(1,1,1), include.drift = TRUE))
summary(Arima(train, order=c(1,1,2),include.drift = TRUE))
summary(Arima(train, order=c(2,1,1),include.drift = TRUE))
# Based on the AICc value. the auto arima model has the smallest AICc value. It is better than the than the three Arima models. Becuase the AICc = 444.88 which is the lowest.
# Forecase for four years so h = 4
plot(forecast(auto,h=4,level = c(80, 95)))
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
fore1 <- InvBoxCox(fore1, 0.23)
actual <- usgdp[usgdp$Year>2012,]
err <- actual$GDP - fore1
plot(err)
# The forecase is getting larger.
sum((err)^2)
library(fpp)
library(TSA)
load('usgdp.rda')
gdp <- ts(usgdp$GDP, frequency = 1,start = 1960)
train <- window(gdp,start = 1960, end = 2012)
test <- window(gdp,start = 2013, end = 2017)
library(fpp)
library(TSA)
load('usgdp.rda')
gdp <- ts(usgdp$GDP, frequency = 1,start = 1960)
train <- window(gdp,start = 1960, end = 2012)
test <- window(gdp,start = 2013, end = 2017)
plot(train)
BoxCox.lambda(train)
train <- BoxCox(train, lambda = 0.23)
plot(train)
library(tseries)
# first order difference of the data
plot(diff(train,differences = 1))
# second order difference of the data
plot(diff(train,differences = 2))
#Use kpss.test to test stationary
kpss.test(diff(train,differences = 1))
kpss.test(diff(train,differences = 2))
# Based on the kpss test. Both the first and second order difference of the data is stationary. Because the p-value is larger than 0.05, so fail to reject the null hypothesis that the time series is stationary.
library(fpp)
library(TSA)
load('usgdp.rda')
gdp <- ts(usgdp$GDP, frequency = 1,start = 1960)
train <- window(gdp,start = 1960, end = 2012)
test <- window(gdp,start = 2013, end = 2017)
plot(train)
BoxCox.lambda(train)
train <- BoxCox(train, lambda = 0.23)
plot(train)
library(tseries)
# first order difference of the data
plot(diff(train,differences = 1))
# second order difference of the data
plot(diff(train,differences = 2))
#Use kpss.test to test stationary
kpss.test(diff(train,differences = 1))
kpss.test(diff(train,differences = 2))
auto <- auto.arima(train,seasonal = FALSE)
auto
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
summary(Arima(train, order=c(1,2,1), include.drift = TRUE))
auto <- auto.arima(train,seasonal = FALSE)
auto
eacf(train)
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
summary(Arima(train, order=c(1,1,1), include.drift = TRUE))
summary(Arima(train, order=c(1,1,2),include.drift = TRUE))
summary(Arima(train, order=c(2,1,1),include.drift = TRUE))
# Second Order Difference
summary(Arima(train, order=c(1,2,1), include.drift = TRUE))
summary(Arima(train, order=c(1,2,2),include.drift = TRUE))
summary(Arima(train, order=c(2,2,1),include.drift = TRUE))
summary(Arima(train, order=c(1,1,1), include.drift = TRUE))
summary(Arima(train, order=c(1,1,2),include.drift = TRUE))
summary(Arima(train, order=c(2,1,1),include.drift = TRUE))
# Second Order Difference
summary(Arima(train, order=c(1,2,1), include.drift = TRUE))
# Second Order Difference
summary(Arima(train, order=c(1,2,0), include.drift = TRUE))
summary(Arima(train, order=c(2,2,0),include.drift = TRUE))
summary(Arima(train, order=c(1,2,2),include.drift = TRUE))
summary(Arima(train, order=c(2,2,1),include.drift = TRUE))
eacf(train)
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
summary(Arima(train, order=c(1,1,1), include.drift = TRUE))
summary(Arima(train, order=c(1,1,2),include.drift = TRUE))
summary(Arima(train, order=c(2,1,1),include.drift = TRUE))
# Second Order Difference
summary(Arima(train, order=c(1,2,1), include.drift = TRUE))
summary(Arima(train, order=c(1,2,2),include.drift = TRUE))
summary(Arima(train, order=c(2,2,1),include.drift = TRUE))
summary(Arima(train, order=c(1,1,1), include.drift = TRUE))
summary(Arima(train, order=c(1,1,2),include.drift = TRUE))
summary(Arima(train, order=c(2,1,1),include.drift = TRUE))
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
summary(Arima(train, order=c(1,1,0), include.drift = TRUE))
summary(Arima(train, order=c(1,1,1), include.drift = TRUE))
summary(Arima(train, order=c(1,1,2),include.drift = TRUE))
summary(Arima(train, order=c(2,1,1),include.drift = TRUE))
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
summary(Arima(train, order=c(1,1,0), include.drift = TRUE))
# Second Order Difference
summary(Arima(train, order=c(1,2,1), include.drift = TRUE))
summary(Arima(train, order=c(1,2,2),include.drift = TRUE))
summary(Arima(train, order=c(2,2,1),include.drift = TRUE))
# Forecase for four years so h = 4
plot(forecast(auto,h=4,level = c(80, 95)))
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
fore1 <- InvBoxCox(fore1, 0.23)
actual <- usgdp[usgdp$Year>2012,]
err <- actual$GDP - fore1
plot(err)
checkresiduals(auto)
# Forecase for four years so h = 4
plot(forecast(auto,h=5,level = c(80, 95)))
# Forecase for four years so h = 4
plot(forecast(auto,h=5,level = c(80, 95)))
library(fpp)
library(TSA)
load('usgdp.rda')
gdp <- ts(usgdp$GDP, frequency = 1,start = 1960)
train <- window(gdp,start = 1960, end = 2012)
test <- window(gdp,start = 2013, end = 2017)
plot(train)
BoxCox.lambda(train)
train <- BoxCox(train, lambda = 0.23)
plot(train)
library(tseries)
# first order difference of the data
plot(diff(train,differences = 1))
# second order difference of the data
plot(diff(train,differences = 2))
#Use kpss.test to test stationary
kpss.test(diff(train,differences = 1))
kpss.test(diff(train,differences = 2))
auto <- auto.arima(train,seasonal = FALSE)
auto
eacf(train)
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
summary(Arima(train, order=c(1,1,0), include.drift = TRUE))
summary(Arima(train, order=c(1,1,1), include.drift = TRUE))
summary(Arima(train, order=c(1,1,2),include.drift = TRUE))
summary(Arima(train, order=c(2,1,1),include.drift = TRUE))
# Second Order Difference
summary(Arima(train, order=c(1,2,1), include.drift = TRUE))
summary(Arima(train, order=c(1,2,2),include.drift = TRUE))
summary(Arima(train, order=c(2,2,1),include.drift = TRUE))
# Forecase for four years so h = 4
plot(forecast(auto,h=5,level = c(80, 95)))
# Forecase for five years so h = 5
plot(forecast(auto,h=5,level = c(80, 95)))
# Forecase for five years so h = 5
plot(forecast(auto,h=4,level = c(80, 95)))
# Forecase for five years so h = 5
plot(forecast(auto,h=5,level = c(80, 95)))
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
fore1 <- InvBoxCox(fore1, 0.23)
actual <- usgdp[usgdp$Year>2012,]
err <- actual$GDP - fore1
plot(err)
sum((err)^2)
# Forecase for five years so h = 5
plot(forecast(auto,h=3,level = c(80, 95)))
# Forecase for five years so h = 5
plot(forecast(auto,h=5,level = c(80, 95)))
library(fpp)
library(TSA)
load('usgdp.rda')
gdp <- ts(usgdp$GDP, frequency = 1,start = 1960)
train <- window(gdp,start = 1960, end = 2012)
test <- window(gdp,start = 2013, end = 2017)
plot(train)
plot(test)
plot(train)
library(fpp)
library(TSA)
load('usgdp.rda')
gdp <- ts(usgdp$GDP, frequency = 1,start = 1960)
train <- window(gdp,start = 1960, end = 2012)
test <- window(gdp,start = 2013, end = 2017)
plot(train)
BoxCox.lambda(train)
train <- BoxCox(train, lambda = 0.23)
plot(train)
library(tseries)
# first order difference of the data
plot(diff(train,differences = 1))
# second order difference of the data
plot(diff(train,differences = 2))
#Use kpss.test to test stationary
kpss.test(diff(train,differences = 1))
kpss.test(diff(train,differences = 2))
auto <- auto.arima(train,seasonal = FALSE)
auto
eacf(train)
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
summary(Arima(train, order=c(1,1,0), include.drift = TRUE))
summary(Arima(train, order=c(1,1,1), include.drift = TRUE))
summary(Arima(train, order=c(1,1,2),include.drift = TRUE))
summary(Arima(train, order=c(2,1,1),include.drift = TRUE))
# Second Order Difference
summary(Arima(train, order=c(1,2,1), include.drift = TRUE))
summary(Arima(train, order=c(1,2,2),include.drift = TRUE))
summary(Arima(train, order=c(2,2,1),include.drift = TRUE))
# Forecase for five years so h = 5
plot(forecast(auto,h=5,level = c(80, 95)))
# Forecase for five years so h = 5
plot(forecast(auto,h=5,level = c(80, 95)))
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
fore1 <- InvBoxCox(fore1, 0.23)
actual <- usgdp[usgdp$Year>2012,]
err <- actual$GDP - fore1
plot(err)
fore1 <- forecast(auto,h=5,level = c(80, 95))
plot(fore1)
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
fore1 <- InvBoxCox(fore1, 0.23)
actual <- usgdp[usgdp$Year>2012,]
err <- actual$GDP - fore1
plot(err)
# Forecase for five years so h = 5
plot(forecast(auto,h=5,level = c(80, 95)))
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
fore1 <- InvBoxCox(fore1, 0.23)
actual <- usgdp[usgdp$Year>2012,]
err <- actual$GDP - fore1
plot(err)
sum((err)^2)
# Forecase for five years so h = 5
plot(forecast(auto,h=5,level = c(80, 95)))
# Forecase for five years so h = 5
plot(forecast(auto,h=6,level = c(80, 95)))
plot(forecast(auto,h=5,level = c(80, 95)))
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
fore1 <- InvBoxCox(fore1, 0.23)
actual <- usgdp[usgdp$Year>2012,]
err <- actual$GDP - fore1
plot(err)
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
fore1
fore1 <- InvBoxCox(fore1, 0.23)
fore1
actual$GDP
fore1 <- forecast(auto,h=5,level = c(80, 95))
fore1 <- fore1$mean
# Need to use invboxcox to transform the predicted back to normal value to compare with the origional data.
fore1 <- InvBoxCox(fore1, 0.23)
actual <- usgdp[usgdp$Year>2012,]
err <- actual$GDP - fore1
plot(err)
eact(window(gdp,start = 1960, end = 2012))
eacf(window(gdp,start = 1960, end = 2012))
library(fpp)
library(TSA)
load('usgdp.rda')
gdp <- ts(usgdp$GDP, frequency = 1,start = 1960)
train <- window(gdp,start = 1960, end = 2012)
test <- window(gdp,start = 2013, end = 2017)
library(tseries)
# first order difference of the data
plot(diff(train,differences = 1))
# second order difference of the data
plot(diff(train,differences = 2))
#Use kpss.test to test stationary
kpss.test(diff(train,differences = 1))
kpss.test(diff(train,differences = 2))
auto <- auto.arima(train,seasonal = FALSE)
auto
eacf(train)
# based on the eacf, p and q can have the combination of (1,1),(1,2),(2,1)
summary(Arima(train, order=c(1,1,0), include.drift = TRUE))
